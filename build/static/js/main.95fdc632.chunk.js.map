{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","Person","person","persons","setPersons","setErrorMessange","name","number","onClick","window","confirm","personService","newPersons","filter","personNow","catch","error","setTimeout","p","Persons","personsToshow","toLowerCase","includes","map","Filter","newFilter","setNewFilter","value","onChange","event","target","PersonForm","newName","newNumber","setNewName","setNewNumber","setSuccessMessange","onSubmit","preventDefault","some","personObject","find","resPerson","concat","type","SuccessNotification","successMessange","className","ErrorNotification","errorMessange","App","useState","useEffect","personData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95fdc632.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAllPerson = () => \r\n    axios.get(baseUrl).then(response => response.data)\r\n\r\nconst addPerson = (newPerson) => \r\n    axios.post(baseUrl, newPerson).then(response => response.data)\r\n\r\nconst deletePerson = (id) =>\r\n    axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n\r\nconst updatePerson = (newPerson, id) =>\r\n    axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data)\r\n\r\nexport default {getAllPerson, addPerson, deletePerson, updatePerson}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport personService from './services/personService'\r\n\r\nconst Person = ({person, persons, setPersons, setErrorMessange}) => {\r\n    const deleteButtonHandler = () => {\r\n        if(window.confirm(`Delete ${person.name}?`)){\r\n            personService.deletePerson(person.id).then((data) => {\r\n                const newPersons = persons.filter(personNow => personNow.id !== person.id)\r\n                setPersons(newPersons)\r\n            }).catch(error => {\r\n                setErrorMessange(`Information of ${person.name} has already been removed from server`)\r\n                setTimeout(() => {\r\n                    setErrorMessange(null)\r\n                }, 5000)\r\n                setPersons(persons.filter(p => p.id !== person.id))\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n          <div>{person.name} {person.number} <button onClick={deleteButtonHandler}>delete</button></div>\r\n        </> \r\n    )\r\n}\r\n\r\nconst Persons = ({persons, filter, setPersons, setErrorMessange}) => {\r\n    //const persons = persons.map(person => person.name)\r\n    //console.log(persons)\r\n    const personsToshow = persons.filter(person => \r\n        (person.name.toLowerCase().includes(filter.toLowerCase())))\r\n    return(\r\n        <div> \r\n            <ul>\r\n                {personsToshow.map(person => <Person key={person.name} person={person} persons={persons} \r\n                   setPersons={setPersons} setErrorMessange={setErrorMessange}/>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({newFilter, setNewFilter}) => {\r\n  //console.log(valFilter)\r\n  const handleFilterChange = event => {\r\n      setNewFilter(event.target.value)\r\n  }\r\n  return(\r\n    <div>\r\n        filter shown with <input value={newFilter} onChange={handleFilterChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({persons, setPersons, newName, newNumber, setNewName, setNewNumber, setSuccessMessange}) => {\r\n    const handlePersonChange = event => {\r\n        setNewName(event.target.value)\r\n        //console.log(event.target.value)\r\n      }\r\n     const handleNumberChange = event => {\r\n         setNewNumber(event.target.value)\r\n     }\r\n   \r\n     const handleSubmit = (event) => {\r\n       event.preventDefault()\r\n       /*\r\n       console.log(persons, personObject)\r\n       console.log(persons.some(person => person.name === personObject.name))  */\r\n       if(persons.some(person => person.name === newName)){\r\n           if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n                const personObject = persons.find(p => p.name === newName)\r\n                const newPerson = {...personObject, number: newNumber}\r\n                personService.updatePerson(newPerson, newPerson.id).then((resPerson) => {\r\n                    setPersons(persons.map(person => person.name !== newName ? person : resPerson))\r\n                })\r\n            }\r\n       }\r\n       else{\r\n            const personObject = {\r\n                name : newName,\r\n                number : newNumber\r\n            }\r\n           //const newPersons = persons.concat(personObject) \r\n           personService.addPerson(personObject).then((newPersons) => {\r\n               //console.log(newPersons)\r\n               setSuccessMessange(`Added ${newName}`)\r\n               setTimeout(() => {\r\n                 setSuccessMessange(null)\r\n               }, 5000)\r\n              setPersons(persons.concat(newPersons))\r\n           })\r\n       }\r\n       setNewName('')\r\n       setNewNumber('')\r\n     }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n            name: <input value={newName} \r\n                onChange={handlePersonChange}/>\r\n            </div>\r\n            <div>\r\n            number: <input value={newNumber}\r\n                onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst SuccessNotification = ({successMessange}) => {\r\n   // console.log(successMessange)\r\n    if(successMessange == null) return null\r\n    return  <div className=\"success\">{successMessange}</div>\r\n}\r\n\r\nconst ErrorNotification = ({errorMessange}) => {\r\n    if(errorMessange == null) return null\r\n    return  <div className=\"error\">{errorMessange}</div>\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ newFilter, setNewFilter] = useState('')\r\n  const [ errorMessange, setErrorMessange] = useState(null)\r\n  const [ successMessange, setSuccessMessange] = useState(null)\r\n  useEffect(() => {\r\n      //console.log('effect')\r\n      const eventHandler = (personData) => {\r\n        //console.log(response.data)\r\n        setPersons(personData)\r\n      }\r\n      personService.getAllPerson().then(eventHandler)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <ErrorNotification errorMessange={errorMessange}/>\r\n      <SuccessNotification successMessange={successMessange}/>\r\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter}/>\r\n      <h3>add a new</h3>\r\n      <PersonForm persons={persons} setPersons={setPersons}\r\n       newName={newName} newNumber={newNumber}\r\n       setNewName={setNewName} setNewNumber={setNewNumber}\r\n       setSuccessMessange={setSuccessMessange}/>\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={newFilter} setPersons={setPersons} \r\n        setErrorMessange={setErrorMessange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}